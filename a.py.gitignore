# Import the Library
import subsaz.CPTEC_SUB as SUB
import json
from matplotlib import pyplot as plt
import xarray as xr
import pandas as pd
import netCDF4 as nc
import csv

userinputminlat=input("lat")

# Initialize the Constructorr
sub = SUB.model()

# Area Definition
sub.dict['area']['reduce'] = True
sub.dict['area']['minlat'] = userinputminlat
sub.dict['area']['maxlat'] = 15.0
sub.dict['area']['minlon'] = 270.0
sub.dict['area']['maxlon'] = 330.0

# Initial Condition Date
date = '20250924'

# Variable
var = ['t2mt_ca']

# Time Range
product = 'week'

# Map Type
field = 'totals'

# Data Request / Data retrieval
f = sub.load(date=date, var=var, product=product ,field=field)

# Download NetCDF Data
f.to_netcdf("output.nc")

#------

fp='output.nc'
ds = xr.open_dataset(fp)

# Convert the xarray DataArray or Dataset to a pandas DataFrame
df = ds.to_dataframe()

# Or, if you have a DataArray, you might need to convert it:
db = nc.Dataset(fp)
# Save the DataFrame to a CSV file
print(df)
df.to_csv('output.csv')

#-------

json_file = 'output.json'

data = []
with open('output.csv', newline='', encoding='utf-8') as f:
    reader = csv.DictReader(f)
    for row in reader:
        data.append(row)

with open(json_file, 'w', encoding='utf-8') as f:
    json.dump(data, f, indent=2)

'''
# Open the NetCDF file

# Convert NetCDF variables to a dictionary
data = {}
for var in db.variables:
    data[var] = db.variables[var][:].tolist()

# Save as JSON
with open('output.json', 'w') as f:
    json.dump(data, f)

db.close()
'''